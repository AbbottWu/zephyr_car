#include <zephyr/dt-bindings/pwm/pwm.h>

/ {
    aliases{
        lightsensor = &lightsensor;
    };
    motor_drivers {
        status = "okay";
        motor_0 {
            status = "okay";
            compatible = "encode_motor";
            pwms = <&ledc0 0 50000 PWM_POLARITY_NORMAL>, <&ledc0 1 50000 PWM_POLARITY_NORMAL>;
            pwm-names = "port_0", "port_1";
            gpios = <&gpio0 15 GPIO_ACTIVE_HIGH>, <&gpio0 16 GPIO_ACTIVE_HIGH>;
            label = "motor_0";
        };
        motor_1 {
            status = "okay";
            compatible = "encode_motor";
            pwms = <&ledc0 2 50000 PWM_POLARITY_NORMAL>, <&ledc0 3 50000 PWM_POLARITY_NORMAL>;
            pwm-names = "port_0", "port_1";
            gpios = <&gpio0 17 GPIO_ACTIVE_HIGH>, <&gpio0 18 GPIO_ACTIVE_HIGH>;
            label = "motor_1";
        };
        motor_2 {
            status = "okay";
            compatible = "encode_motor";
            pwms = <&ledc0 4 50000 PWM_POLARITY_NORMAL>, <&ledc0 5 50000 PWM_POLARITY_NORMAL>;
            pwm-names = "port_0", "port_1";
            gpios = <&gpio0 19 GPIO_ACTIVE_HIGH>, <&gpio0 20 GPIO_ACTIVE_HIGH>;
            label = "motor_2";
        };
        motor_3 {
            status = "okay";
            compatible = "encode_motor";
            pwms = <&ledc0 6 50000 PWM_POLARITY_NORMAL>, <&ledc0 7 50000 PWM_POLARITY_NORMAL>;
            pwm-names = "port_0", "port_1";
            gpios = <&gpio1 9 GPIO_ACTIVE_HIGH>, <&gpio1 10 GPIO_ACTIVE_HIGH>;
            label = "motor_3";
        };
    };
};

&ledc0 {
    status = "okay";
    compatible = "espressif,esp32-ledc";
    pinctrl-0 = <&pwm_motors>;
    pinctrl-names = "default";
    #pwm-cells = <3>;
    #address-cells = <1>;
    #size-cells = <0>;
    channel0@0 {
        reg = <0>;
        timer = <0>;
    };
    channel1@1 {
        reg = <1>;
        timer = <0>;
    };
    channel2@2 {
        reg = <2>;
        timer = <0>;
    };
    channel3@3 {
        reg = <3>;
        timer = <0>;
    };
    channel4@4 {
        reg = <4>;
        timer = <0>;
    };
    channel5@5 {
        reg = <5>;
        timer = <0>;
    };
    channel6@6 {
        reg = <6>;
        timer = <0>;
    };
    channel7@7 {
        reg = <7>;
        timer = <0>;
    };
};

&i2c0 {
	status = "okay";
	pinctrl-0 = <&i2c_sensor>;
	pinctrl-names = "default";
	clock-frequency = <I2C_BITRATE_FAST>;
    lightsensor: lightsensor@4c {
            compatible = "light_sensor";
            reg=<0x4c>;
            label="lightsensor";
            status="okay";
    };
};

&pinctrl {
    pwm_motors: pwm_motors{
        group1 {
            pinmux = <LEDC_CH0_GPIO7>,
                    <LEDC_CH1_GPIO8>,
                    <LEDC_CH2_GPIO9>,
                    <LEDC_CH3_GPIO10>,
                    <LEDC_CH4_GPIO11>,
                    <LEDC_CH5_GPIO12>,
                    <LEDC_CH6_GPIO13>,
                    <LEDC_CH7_GPIO14>;
            output-enable;
        };
    };
    i2c_sensor: i2c_sensor{
        group1 {
            pinmux = <I2C0_SCL_GPIO6>,
                     <I2C0_SDA_GPIO5>;
            output-enable;
        };
    };
};